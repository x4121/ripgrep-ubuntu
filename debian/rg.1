'\" t
.\"     Title: rg
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 08/26/2018
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "RG" "1" "08/26/2018" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
rg \- recursively search current directory for lines matching a pattern
.SH "SYNOPSIS"
.sp
\fBrg\fR [\fIOPTIONS\fR] \fIPATTERN\fR [\fIPATH\fR\&...]
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-e\fR \fIPATTERN\fR\&... [\fIPATH\fR\&...]
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-f\fR \fIPATTERNFILE\fR\&... [\fIPATH\fR\&...]
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-\-files\fR [\fIPATH\fR\&...]
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-\-type\-list\fR
.sp
\fBcommand\fR | \fBrg\fR [\fIOPTIONS\fR] \fIPATTERN\fR
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-\-help\fR
.sp
\fBrg\fR [\fIOPTIONS\fR] \fB\-\-version\fR
.SH "DESCRIPTION"
.sp
ripgrep (rg) recursively searches your current directory for a regex pattern\&. By default, ripgrep will respect your \&.gitignore and automatically skip hidden files/directories and binary files\&.
.sp
ripgrep\(cqs regex engine uses finite automata and guarantees linear time searching\&. Because of this, features like backreferences and arbitrary lookaround are not supported\&.
.SH "REGEX SYNTAX"
.sp
ripgrep uses Rust\(cqs regex engine, which documents its syntax: https://docs\&.rs/regex/0\&.2\&.5/regex/#syntax
.sp
ripgrep uses byte\-oriented regexes, which has some additional documentation: https://docs\&.rs/regex/0\&.2\&.5/regex/bytes/index\&.html#syntax
.sp
To a first approximation, ripgrep uses Perl\-like regexes without look\-around or backreferences\&. This makes them very similar to the "extended" (ERE) regular expressions supported by egrep, but with a few additional features like Unicode character classes\&.
.SH "POSITIONAL ARGUMENTS"
.PP
\fIPATTERN\fR
.RS 4
A regular expression used for searching\&. To match a pattern beginning with a dash, use the \-e/\-\-regexp option\&.
.RE
.PP
\fIPATH\fR
.RS 4
A file or directory to search\&. Directories are searched recursively\&. Paths specified expicitly on the command line override glob and ignore rules\&.
.RE
.SH "OPTIONS"
.PP
\fB\-A, \-\-after\-context\fR \fINUM\fR
.RS 4
Show NUM lines after each match\&.
.sp
This overrides the \-\-context flag\&.
.RE
.PP
\fB\-B, \-\-before\-context\fR \fINUM\fR
.RS 4
Show NUM lines before each match\&.
.sp
This overrides the \-\-context flag\&.
.RE
.PP
\fB\-b, \-\-byte\-offset\fR
.RS 4
Print the 0\-based byte offset within the input file before each line of output\&. If \-o (\-\-only\-matching) is specified, print the offset of the matching part itself\&.
.RE
.PP
\fB\-s, \-\-case\-sensitive\fR
.RS 4
Search case sensitively\&.
.sp
This overrides the \-i/\-\-ignore\-case and \-S/\-\-smart\-case flags\&.
.RE
.PP
\fB\-\-color\fR \fIWHEN\fR
.RS 4
This flag controls when to use colors\&. The default setting is
\fIauto\fR, which means ripgrep will try to guess when to use colors\&. For example, if ripgrep is printing to a terminal, then it will use colors, but if it is redirected to a file or a pipe, then it will suppress color output\&. ripgrep will suppress color output in some other circumstances as well\&. For example, if the TERM environment variable is not set or set to
\fIdumb\fR, then ripgrep will not use colors\&.
.sp
The possible values for this flag are:
.sp
.if n \{\
.RS 4
.\}
.nf
never    Colors will never be used\&.
auto     The default\&. ripgrep tries to be smart\&.
always   Colors will always be used regardless of where output is sent\&.
ansi     Like \*(Aqalways\*(Aq, but emits ANSI escapes (even in a Windows console)\&.
.fi
.if n \{\
.RE
.\}
.sp
When the \-\-vimgrep flag is given to ripgrep, then the default value for the \-\-color flag changes to
\fInever\fR\&.
.RE
.PP
\fB\-\-colors\fR \fICOLOR_SPEC\fR \&...
.RS 4
This flag specifies color settings for use in the output\&. This flag may be provided multiple times\&. Settings are applied iteratively\&. Colors are limited to one of eight choices: red, blue, green, cyan, magenta, yellow, white and black\&. Styles are limited to nobold, bold, nointense, intense, nounderline or underline\&.
.sp
The format of the flag is
{type}:{attribute}:{value}\&.
{type}
should be one of path, line, column or match\&.
{attribute}
can be fg, bg or style\&.
{value}
is either a color (for fg and bg) or a text style\&. A special format,
{type}:none, will clear all color settings for
{type}\&.
.sp
For example, the following command will change the match color to magenta and the background color for line numbers to yellow:
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-colors \*(Aqmatch:fg:magenta\*(Aq \-\-colors \*(Aqline:bg:yellow\*(Aq foo\&.
.fi
.if n \{\
.RE
.\}
.sp
Extended colors can be used for
{value}
when the terminal supports ANSI color sequences\&. These are specified as either
\fIx\fR
(256\-color) or
\fIx,x,x\fR
(24\-bit truecolor) where x is a number between 0 and 255 inclusive\&. x may be given as a normal decimal number or a hexadecimal number, which is prefixed by
0x\&.
.sp
For example, the following command will change the match background color to that represented by the rgb value (0,128,255):
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-colors \*(Aqmatch:bg:0,128,255\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
or, equivalently,
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-colors \*(Aqmatch:bg:0x0,0x80,0xFF\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Note that the the intense and nointense style flags will have no effect when used alongside these extended color codes\&.
.RE
.PP
\fB\-\-column\fR
.RS 4
Show column numbers (1\-based)\&. This only shows the column numbers for the first match on each line\&. This does not try to account for Unicode\&. One byte is equal to one column\&. This implies \-\-line\-number\&.
.sp
This flag can be disabled with \-\-no\-column\&.
.RE
.PP
\fB\-C, \-\-context\fR \fINUM\fR
.RS 4
Show NUM lines before and after each match\&. This is equivalent to providing both the \-B/\-\-before\-context and \-A/\-\-after\-context flags with the same value\&.
.sp
This overrides both the \-B/\-\-before\-context and \-A/\-\-after\-context flags\&.
.RE
.PP
\fB\-\-context\-separator\fR \fISEPARATOR\fR
.RS 4
The string used to separate non\-contiguous context lines in the output\&. Escape sequences like \ex7F or \et may be used\&. The default value is \-\-\&.
.RE
.PP
\fB\-c, \-\-count\fR
.RS 4
This flag suppresses normal output and shows the number of lines that match the given patterns for each file searched\&. Each file containing a match has its path and count printed on each line\&. Note that this reports the number of lines that match and not the total number of matches\&.
.sp
If only one file is given to ripgrep, then only the count is printed if there is a match\&. The \-\-with\-filename flag can be used to force printing the file path in this case\&.
.sp
This overrides the \-\-count\-matches flag\&. Note that when \-\-count is combined with \-\-only\-matching, then ripgrep behaves as if \-\-count\-matches was given\&.
.RE
.PP
\fB\-\-count\-matches\fR
.RS 4
This flag suppresses normal output and shows the number of individual matches of the given patterns for each file searched\&. Each file containing matches has its path and match count printed on each line\&. Note that this reports the total number of individual matches and not the number of lines that match\&.
.sp
If only one file is given to ripgrep, then only the count is printed if there is a match\&. The \-\-with\-filename flag can be used to force printing the file path in this case\&.
.sp
This overrides the \-\-count flag\&. Note that when \-\-count is combined with \-\-only\-matching, then ripgrep behaves as if \-\-count\-matches was given\&.
.RE
.PP
\fB\-\-debug\fR
.RS 4
Show debug messages\&. Please use this when filing a bug report\&.
.RE
.PP
\fB\-\-dfa\-size\-limit\fR \fINUM+SUFFIX?\fR
.RS 4
The upper size limit of the regex DFA\&. The default limit is 10M\&. This should only be changed on very large regex inputs where the (slower) fallback regex engine may otherwise be used if the limit is reached\&.
.sp
The argument accepts the same size suffixes as allowed in with the \-\-max\-filesize flag\&.
.RE
.PP
\fB\-E, \-\-encoding\fR \fIENCODING\fR
.RS 4
Specify the text encoding that ripgrep will use on all files searched\&. The default value is
\fIauto\fR, which will cause ripgrep to do a best effort automatic detection of encoding on a per\-file basis\&. Other supported values can be found in the list of labels here:
https://encoding\&.spec\&.whatwg\&.org/#concept\-encoding\-get
.RE
.PP
\fB\-f, \-\-file\fR \fIPATTERNFILE\fR \&...
.RS 4
Search for patterns from the given file, with one pattern per line\&. When this flag is used multiple times or in combination with the \-e/\-\-regexp flag, then all patterns provided are searched\&. Empty pattern lines will match all input lines, and the newline is not counted as part of the pattern\&.
.sp
A line is printed if and only if it matches at least one of the patterns\&.
.RE
.PP
\fB\-\-files\fR
.RS 4
Print each file that would be searched without actually performing the search\&. This is useful to determine whether a particular file is being search or not\&.
.RE
.PP
\fB\-l, \-\-files\-with\-matches\fR
.RS 4
Only print the paths with at least one match\&.
.sp
This overrides \-\-files\-without\-match\&.
.RE
.PP
\fB\-\-files\-without\-match\fR
.RS 4
Only print the paths that contain zero matches\&. This inverts/negates the \-\-files\-with\-matches flag\&.
.sp
This overrides \-\-files\-with\-matches\&.
.RE
.PP
\fB\-F, \-\-fixed\-strings\fR
.RS 4
Treat the pattern as a literal string instead of a regular expression\&. When this flag is used, special regular expression meta characters such as \&.(){}*+ do not need to be escaped\&.
.sp
This flag can be disabled with \-\-no\-fixed\-strings\&.
.RE
.PP
\fB\-L, \-\-follow\fR
.RS 4
When this flag is enabled, ripgrep will follow symbolic links while traversing directories\&. This is disabled by default\&. Note that ripgrep will check for symbolic link loops and report errors if it finds one\&.
.sp
This flag can be disabled with \-\-no\-follow\&.
.RE
.PP
\fB\-g, \-\-glob\fR \fIGLOB\fR \&...
.RS 4
Include or exclude files and directories for searching that match the given glob\&. This always overrides any other ignore logic\&. Multiple glob flags may be used\&. Globbing rules match \&.gitignore globs\&. Precede a glob with a ! to exclude it\&.
.RE
.PP
\fB\-\-heading\fR
.RS 4
This flag prints the file path above clusters of matches from each file instead of printing the file path as a prefix for each matched line\&. This is the default mode when printing to a terminal\&.
.sp
This overrides the \-\-no\-heading flag\&.
.RE
.PP
\fB\-\-hidden\fR
.RS 4
Search hidden files and directories\&. By default, hidden files and directories are skipped\&. Note that if a hidden file or a directory is whitelisted in an ignore file, then it will be searched even if this flag isn\(cqt provided\&.
.sp
This flag can be disabled with \-\-no\-hidden\&.
.RE
.PP
\fB\-\-iglob\fR \fIGLOB\fR \&...
.RS 4
Include or exclude files and directories for searching that match the given glob\&. This always overrides any other ignore logic\&. Multiple glob flags may be used\&. Globbing rules match \&.gitignore globs\&. Precede a glob with a ! to exclude it\&. Globs are matched case insensitively\&.
.RE
.PP
\fB\-i, \-\-ignore\-case\fR
.RS 4
When this flag is provided, the given patterns will be searched case insensitively\&. The case insensitivity rules used by ripgrep conform to Unicode\(cqs "simple" case folding rules\&.
.sp
This flag overrides \-s/\-\-case\-sensitive and \-S/\-\-smart\-case\&.
.RE
.PP
\fB\-\-ignore\-file\fR \fIPATH\fR \&...
.RS 4
Specifies a path to one or more \&.gitignore format rules files\&. These patterns are applied after the patterns found in \&.gitignore and \&.ignore are applied and are matched relative to the current working directory\&. Multiple additional ignore files can be specified by using the \-\-ignore\-file flag several times\&. When specifying multiple ignore files, earlier files have lower precedence than later files\&.
.sp
If you are looking for a way to include or exclude files and directories directly on the command line, then used \-g instead\&.
.RE
.PP
\fB\-v, \-\-invert\-match\fR
.RS 4
Invert matching\&. Show lines that do not match the given patterns\&.
.RE
.PP
\fB\-n, \-\-line\-number\fR
.RS 4
Show line numbers (1\-based)\&. This is enabled by default when searching in a terminal\&.
.RE
.PP
\fB\-x, \-\-line\-regexp\fR
.RS 4
Only show matches surrounded by line boundaries\&. This is equivalent to putting ^\&...$ around all of the search patterns\&. In other words, this only prints lines where the entire line participates in a match\&.
.sp
This overrides the \-\-word\-regexp flag\&.
.RE
.PP
\fB\-M, \-\-max\-columns\fR \fINUM\fR
.RS 4
Don\(cqt print lines longer than this limit in bytes\&. Longer lines are omitted, and only the number of matches in that line is printed\&.
.sp
When this flag is omitted or is set to 0, then it has no effect\&.
.RE
.PP
\fB\-m, \-\-max\-count\fR \fINUM\fR
.RS 4
Limit the number of matching lines per file searched to NUM\&.
.RE
.PP
\fB\-\-max\-depth\fR \fINUM\fR
.RS 4
Limit the depth of directory traversal to NUM levels beyond the paths given\&. A value of zero only searches the explicitly given paths themselves\&.
.sp
For example,
\fIrg \-\-max\-depth 0 dir/\fR
is a no\-op because dir/ will not be descended into\&.
\fIrg \-\-max\-depth 1 dir/\fR
will search only the direct children of
\fIdir\fR\&.
.RE
.PP
\fB\-\-max\-filesize\fR \fINUM+SUFFIX?\fR
.RS 4
Ignore files larger than NUM in size\&. This does not apply to directories\&.
.sp
The input format accepts suffixes of K, M or G which correspond to kilobytes, megabytes and gigabytes, respectively\&. If no suffix is provided the input is treated as bytes\&.
.sp
Examples: \-\-max\-filesize 50K or \-\-max\-filesize 80M
.RE
.PP
\fB\-\-mmap\fR
.RS 4
Search using memory maps when possible\&. This is enabled by default when ripgrep thinks it will be faster\&.
.sp
Memory map searching doesn\(cqt currently support all options, so if an incompatible option (e\&.g\&., \-\-context) is given with \-\-mmap, then memory maps will not be used\&.
.sp
Note that ripgrep may abort unexpectedly when \-\-mmap if it searches a file that is simultaneously truncated\&.
.sp
This flag overrides \-\-no\-mmap\&.
.RE
.PP
\fB\-\-no\-config\fR
.RS 4
Never read configuration files\&. When this flag is present, ripgrep will not respect the RIPGREP_CONFIG_PATH environment variable\&.
.sp
If ripgrep ever grows a feature to automatically read configuration files in pre\-defined locations, then this flag will also disable that behavior as well\&.
.RE
.PP
\fB\-\-no\-filename\fR
.RS 4
Never print the file path with the matched lines\&. This is the default when ripgrep is explicitly instructed to search one file or stdin\&.
.sp
This flag overrides \-\-with\-filename\&.
.RE
.PP
\fB\-\-no\-heading\fR
.RS 4
Don\(cqt group matches by each file\&. If \-\-no\-heading is provided in addition to the \-H/\-\-with\-filename flag, then file paths will be printed as a prefix for every matched line\&. This is the default mode when not printing to a terminal\&.
.sp
This overrides the \-\-heading flag\&.
.RE
.PP
\fB\-\-no\-ignore\fR
.RS 4
Don\(cqt respect ignore files (\&.gitignore, \&.ignore, etc\&.)\&. This implies \-\-no\-ignore\-parent and \-\-no\-ignore\-vcs\&.
.sp
This flag can be disabled with the \-\-ignore flag\&.
.RE
.PP
\fB\-\-no\-ignore\-global\fR
.RS 4
Don\(cqt respect ignore files that come from "global" sources such as git\(cqs
core\&.excludesFile
configuration option (which defaults to `$HOME/\&.config/git/ignore)\&.
.sp
This flag can be disabled with the \-\-ignore\-global flag\&.
.RE
.PP
\fB\-\-no\-ignore\-messages\fR
.RS 4
Suppresses all error messages related to parsing ignore files such as \&.ignore or \&.gitignore\&.
.sp
This flag can be disabled with the \-\-ignore\-messages flag\&.
.RE
.PP
\fB\-\-no\-ignore\-parent\fR
.RS 4
Don\(cqt respect ignore files (\&.gitignore, \&.ignore, etc\&.) in parent directories\&.
.sp
This flag can be disabled with the \-\-ignore\-parent flag\&.
.RE
.PP
\fB\-\-no\-ignore\-vcs\fR
.RS 4
Don\(cqt respect version control ignore files (\&.gitignore, etc\&.)\&. This implies \-\-no\-ignore\-parent for VCS files\&. Note that \&.ignore files will continue to be respected\&.
.sp
This flag can be disabled with the \-\-ignore\-vcs flag\&.
.RE
.PP
\fB\-N, \-\-no\-line\-number\fR
.RS 4
Suppress line numbers\&. This is enabled by default when not searching in a terminal\&.
.RE
.PP
\fB\-\-no\-messages\fR
.RS 4
Suppress all error messages related to opening and reading files\&. Error messages related to the syntax of the pattern given are still shown\&.
.sp
This flag can be disabled with the \-\-messages flag\&.
.RE
.PP
\fB\-\-no\-mmap\fR
.RS 4
Never use memory maps, even when they might be faster\&.
.sp
This flag overrides \-\-mmap\&.
.RE
.PP
\fB\-0, \-\-null\fR
.RS 4
Whenever a file path is printed, follow it with a NUL byte\&. This includes printing file paths before matches, and when printing a list of matching files such as with \-\-count, \-\-files\-with\-matches and \-\-files\&. This option is useful for use with xargs\&.
.RE
.PP
\fB\-o, \-\-only\-matching\fR
.RS 4
Print only the matched (non\-empty) parts of a matching line, with each such part on a separate output line\&.
.RE
.PP
\fB\-\-passthru\fR
.RS 4
Print both matching and non\-matching lines\&.
.sp
Another way to achieve a similar effect is by modifying your pattern to match the empty string\&. For example, if you are searching using
\fIrg foo\fR
then using
\fIrg "^|foo"\fR
instead will emit every line in every file searched, but only occurrences of
\fIfoo\fR
will be highlighted\&. This flag enables the same behavior without needing to modify the pattern\&.
.sp
This flag conflicts with the \-\-only\-matching and \-\-replace flags\&.
.RE
.PP
\fB\-\-path\-separator\fR \fISEPARATOR\fR
.RS 4
Set the path separator to use when printing file paths\&. This defaults to your platform\(cqs path separator, which is / on Unix and \e on Windows\&. This flag is intended for overriding the default when the environment demands it (e\&.g\&., cygwin)\&. A path separator is limited to a single byte\&.
.RE
.PP
\fB\-\-pre\fR \fICOMMAND\fR
.RS 4
For each input FILE, search the standard output of COMMAND FILE rather than the contents of FILE\&. This option expects the COMMAND program to either be an absolute path or to be available in your PATH\&. Either an empty string COMMAND or the
\-\-no\-pre
flag will disable this behavior\&.
.sp
.if n \{\
.RS 4
.\}
.nf
WARNING: When this flag is set, ripgrep will unconditionally spawn a
process for every file that is searched\&. Therefore, this can incur an
unnecessarily large performance penalty if you don\*(Aqt otherwise need the
flexibility offered by this flag\&.
.fi
.if n \{\
.RE
.\}
.sp
A preprocessor is not run when ripgrep is searching stdin\&.
.sp
When searching over sets of files that may require one of several decoders as preprocessors, COMMAND should be a wrapper program or script which first classifies FILE based on magic numbers/content or based on the FILE name and then dispatches to an appropriate preprocessor\&. Each COMMAND also has its standard input connected to FILE for convenience\&.
.sp
For example, a shell script for COMMAND might look like:
.sp
.if n \{\
.RS 4
.\}
.nf
case "$1" in
*\&.pdf)
    exec pdftotext "$1" \-
    ;;
*)
    case $(file "$1") in
    *Zstandard*)
        exec pzstd \-cdq
        ;;
    *)
        exec cat
        ;;
    esac
    ;;
esac
.fi
.if n \{\
.RE
.\}
.sp
The above script uses
pdftotext
to convert a PDF file to plain text\&. For all other files, the script uses the
file
utility to sniff the type of the file based on its contents\&. If it is a compressed file in the Zstandard format, then
pzstd
is used to decompress the contents to stdout\&.
.sp
This overrides the \-z/\-\-search\-zip flag\&.
.RE
.PP
\fB\-p, \-\-pretty\fR
.RS 4
This is a convenience alias for
\fI\-\-color always \-\-heading \-\-line\-number\fR\&. This flag is useful when you still want pretty output even if you\(cqre piping ripgrep to another program or file\&. For example:
\fIrg \-p foo | less \-R\fR\&.
.RE
.PP
\fB\-q, \-\-quiet\fR
.RS 4
Do not print anything to stdout\&. If a match is found in a file, then ripgrep will stop searching\&. This is useful when ripgrep is used only for its exit code (which will be an error if no matches are found)\&.
.sp
When \-\-files is used, then ripgrep will stop finding files after finding the first file that matches all ignore rules\&.
.RE
.PP
\fB\-\-regex\-size\-limit\fR \fINUM+SUFFIX?\fR
.RS 4
The upper size limit of the compiled regex\&. The default limit is 10M\&.
.sp
The argument accepts the same size suffixes as allowed in the \-\-max\-filesize flag\&.
.RE
.PP
\fB\-e, \-\-regexp\fR \fIPATTERN\fR \&...
.RS 4
A pattern to search for\&. This option can be provided multiple times, where all patterns given are searched\&. Lines matching at least one of the provided patterns are printed\&. This flag can also be used when searching for patterns that start with a dash\&.
.sp
For example, to search for the literal
\fI\-foo\fR, you can use this flag:
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-e \-foo
.fi
.if n \{\
.RE
.\}
.sp
You can also use the special
\fI\-\-\fR
delimiter to indicate that no more flags will be provided\&. Namely, the following is equivalent to the above:
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\- \-foo
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-r, \-\-replace\fR \fIREPLACEMENT_TEXT\fR
.RS 4
Replace every match with the text given when printing results\&. Neither this flag nor any other ripgrep flag will modify your files\&.
.sp
Capture group indices (e\&.g\&., $5) and names (e\&.g\&., $foo) are supported in the replacement string\&.
.sp
Note that the replacement by default replaces each match, and NOT the entire line\&. To replace the entire line, you should match the entire line\&.
.sp
This flag can be used with the \-o/\-\-only\-matching flag\&.
.RE
.PP
\fB\-z, \-\-search\-zip\fR
.RS 4
Search in compressed files\&. Currently gz, bz2, xz, lzma and lz4 files are supported\&. This option expects the decompression binaries to be available in your PATH\&.
.sp
This flag can be disabled with \-\-no\-search\-zip\&.
.RE
.PP
\fB\-S, \-\-smart\-case\fR
.RS 4
Searches case insensitively if the pattern is all lowercase\&. Search case sensitively otherwise\&.
.sp
This overrides the \-s/\-\-case\-sensitive and \-i/\-\-ignore\-case flags\&.
.RE
.PP
\fB\-\-sort\-files\fR
.RS 4
Sort results by file path\&. Note that this currently disables all parallelism and runs search in a single thread\&.
.sp
This flag can be disabled with \-\-no\-sort\-files\&.
.RE
.PP
\fB\-\-stats\fR
.RS 4
Print aggregate statistics about this ripgrep search\&. When this flag is present, ripgrep will print the following stats to stdout at the end of the search: number of matched lines, number of files with matches, number of files searched, and the time taken for the entire search to complete\&.
.sp
This set of aggregate statistics may expand over time\&.
.sp
Note that this flag has no effect if \-\-files, \-\-files\-with\-matches or \-\-files\-without\-match is passed\&.
.RE
.PP
\fB\-a, \-\-text\fR
.RS 4
Search binary files as if they were text\&. When this flag is present, ripgrep\(cqs binary file detection is disabled\&. This means that when a binary file is searched, its contents may be printed if there is a match\&. This may cause escape codes to be printed that alter the behavior of your terminal\&.
.sp
When binary file detection is enabled it is imperfect\&. In general, it uses a simple heuristic\&. If a NUL byte is seen during search, then the file is considered binary and search stops (unless this flag is present)\&.
.sp
Note that when the
\-u/\-\-unrestricted
flag is provided for a third time, then this flag is automatically enabled\&.
.sp
This flag can be disabled with \-\-no\-text\&.
.RE
.PP
\fB\-j, \-\-threads\fR \fINUM\fR
.RS 4
The approximate number of threads to use\&. A value of 0 (which is the default) causes ripgrep to choose the thread count using heuristics\&.
.RE
.PP
\fB\-t, \-\-type\fR \fITYPE\fR \&...
.RS 4
Only search files matching TYPE\&. Multiple type flags may be provided\&. Use the \-\-type\-list flag to list all available types\&.
.RE
.PP
\fB\-\-type\-add\fR \fITYPE_SPEC\fR \&...
.RS 4
Add a new glob for a particular file type\&. Only one glob can be added at a time\&. Multiple \-\-type\-add flags can be provided\&. Unless \-\-type\-clear is used, globs are added to any existing globs defined inside of ripgrep\&.
.sp
Note that this MUST be passed to every invocation of ripgrep\&. Type settings are NOT persisted\&.
.sp
Example:
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-type\-add \*(Aqfoo:*\&.foo\*(Aq \-tfoo PATTERN\&.
.fi
.if n \{\
.RE
.\}
.sp
\-\-type\-add can also be used to include rules from other types with the special include directive\&. The include directive permits specifying one or more other type names (separated by a comma) that have been defined and its rules will automatically be imported into the type specified\&. For example, to create a type called src that matches C++, Python and Markdown files, one can use:
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-type\-add \*(Aqsrc:include:cpp,py,md\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Additional glob rules can still be added to the src type by using the \-\-type\-add flag again:
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-type\-add \*(Aqsrc:include:cpp,py,md\*(Aq \-\-type\-add \*(Aqsrc:*\&.foo\*(Aq
.fi
.if n \{\
.RE
.\}
.sp
Note that type names must consist only of Unicode letters or numbers\&. Punctuation characters are not allowed\&.
.RE
.PP
\fB\-\-type\-clear\fR \fITYPE\fR \&...
.RS 4
Clear the file type globs previously defined for TYPE\&. This only clears the default type definitions that are found inside of ripgrep\&.
.sp
Note that this MUST be passed to every invocation of ripgrep\&. Type settings are NOT persisted\&.
.RE
.PP
\fB\-\-type\-list\fR
.RS 4
Show all supported file types and their corresponding globs\&.
.RE
.PP
\fB\-T, \-\-type\-not\fR \fITYPE\fR \&...
.RS 4
Do not search files matching TYPE\&. Multiple type\-not flags may be provided\&. Use the \-\-type\-list flag to list all available types\&.
.RE
.PP
\fB\-u, \-\-unrestricted\fR \&...
.RS 4
Reduce the level of "smart" searching\&. A single \-u won\(cqt respect \&.gitignore (etc\&.) files\&. Two \-u flags will additionally search hidden files and directories\&. Three \-u flags will additionally search binary files\&.
.sp
\-uu is roughly equivalent to grep \-r and \-uuu is roughly equivalent to grep \-a \-r\&.
.RE
.PP
\fB\-\-vimgrep\fR
.RS 4
Show results with every match on its own line, including line numbers and column numbers\&. With this option, a line with more than one match will be printed more than once\&.
.RE
.PP
\fB\-H, \-\-with\-filename\fR
.RS 4
Display the file path for matches\&. This is the default when more than one file is searched\&. If \-\-heading is enabled (the default when printing to a terminal), the file path will be shown above clusters of matches from each file; otherwise, the file name will be shown as a prefix for each matched line\&.
.sp
This flag overrides \-\-no\-filename\&.
.RE
.PP
\fB\-w, \-\-word\-regexp\fR
.RS 4
Only show matches surrounded by word boundaries\&. This is roughly equivalent to putting \eb before and after all of the search patterns\&.
.sp
This overrides the \-\-line\-regexp flag\&.
.RE
.SH "EXIT STATUS"
.sp
If ripgrep finds a match, then the exit status of the program is 0\&. If no match could be found, then the exit status is non\-zero\&.
.SH "CONFIGURATION FILES"
.sp
ripgrep supports reading configuration files that change ripgrep\(cqs default behavior\&. The format of the configuration file is an "rc" style and is very simple\&. It is defined by two rules:
.sp
.RS 4
.ie n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
Every line is a shell argument, after trimming ASCII whitespace\&.
.RE
.sp
.RS 4
.ie n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
Lines starting with
\fI#\fR
(optionally preceded by any amount of ASCII whitespace) are ignored\&.
.RE
.sp
ripgrep will look for a single configuration file if and only if the \fIRIPGREP_CONFIG_PATH\fR environment variable is set and is non\-empty\&. ripgrep will parse shell arguments from this file on startup and will behave as if the arguments in this file were prepended to any explicit arguments given to ripgrep on the command line\&.
.sp
For example, if your ripgreprc file contained a single line:
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-smart\-case
.fi
.if n \{\
.RE
.\}
.sp
then the following command
.sp
.if n \{\
.RS 4
.\}
.nf
RIPGREP_CONFIG_PATH=wherever/\&.ripgreprc rg foo
.fi
.if n \{\
.RE
.\}
.sp
would behave identically to the following command
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-smart\-case foo
.fi
.if n \{\
.RE
.\}
.sp
another example is adding types
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-type\-add
web:*\&.{html,css,js}*
.fi
.if n \{\
.RE
.\}
.sp
would behave identically to the following command
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-type\-add \*(Aqweb:*\&.{html,css,js}*\*(Aq foo
.fi
.if n \{\
.RE
.\}
.sp
same with using globs
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-glob=!git/*
.fi
.if n \{\
.RE
.\}
.sp
or
.sp
.if n \{\
.RS 4
.\}
.nf
\-\-glob
!git/*
.fi
.if n \{\
.RE
.\}
.sp
would behave identically to the following command
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-glob \*(Aq!git/*\*(Aq foo
.fi
.if n \{\
.RE
.\}
.sp
ripgrep also provides a flag, \fB\-\-no\-config\fR, that when present will suppress any and all support for configuration\&. This includes any future support for auto\-loading configuration files from pre\-determined paths\&.
.sp
Conflicts between configuration files and explicit arguments are handled exactly like conflicts in the same command line invocation\&. That is, this command:
.sp
.if n \{\
.RS 4
.\}
.nf
RIPGREP_CONFIG_PATH=wherever/\&.ripgreprc rg foo \-\-case\-sensitive
.fi
.if n \{\
.RE
.\}
.sp
is exactly equivalent to
.sp
.if n \{\
.RS 4
.\}
.nf
rg \-\-smart\-case foo \-\-case\-sensitive
.fi
.if n \{\
.RE
.\}
.sp
in which case, the \fB\-\-case\-sensitive\fR flag would override the \fB\-\-smart\-case\fR flag\&.
.SH "SHELL COMPLETION"
.sp
Shell completion files are included in the release tarball for Bash, Fish, Zsh and PowerShell\&.
.sp
For \fBbash\fR, move rg\&.bash to $XDG_CONFIG_HOME/bash_completion or /etc/bash_completion\&.d/\&.
.sp
For \fBfish\fR, move rg\&.fish to $HOME/\&.config/fish/completions\&.
.sp
For \fBzsh\fR, move _rg to one of your $fpath directories\&.
.SH "CAVEATS"
.sp
ripgrep may abort unexpectedly when using default settings if it searches a file that is simultaneously truncated\&. This behavior can be avoided by passing the \-\-no\-mmap flag which will forcefully disable the use of memory maps in all cases\&.
.SH "VERSION"
.sp
0\&.9\&.0 \-SIMD \-AVX
.SH "HOMEPAGE"
.sp
https://github\&.com/BurntSushi/ripgrep
.sp
Please report bugs and feature requests in the issue tracker\&.
.SH "AUTHORS"
.sp
Andrew Gallant <jamslam@gmail\&.com>
